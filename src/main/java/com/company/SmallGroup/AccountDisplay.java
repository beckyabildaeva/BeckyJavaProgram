package com.company.SmallGroup;
/*
Task is:
Using OOP, create a Class Account, which has fields Login*, Password*, Firstname*, Lastname*, Age*, City, Place of work, Family status, ID.
Fields marked with star * are mandatory
Create several constructors (for all mandatory and each non-mandatory fields)
ID has to be generated by program and assigned to each new account
Implement Encapsulation with restrictions (like age cannot be negative number and etc)
In new Class, create three users
For user1 - change firstname
For user2 - change City
For user3 - change both login and password
Printout fields before and after the change of each user
 */

// parent class
class AccountMandatory{
    private String login;
    private String password;
    private String firstName;
    private String lastName;
    private int age;

    public AccountMandatory(String login, String password, String firstName, String lastName, int age) {
        this.login = login;
        this.password = password;
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
    }


    public String getLogin() { return login; }
    public void setLogin(String login) { this.login = login; }
    public String getPassword() { return password; }
    public void setPassword(String password) { this.password = password; }
    public String getFirstName() { return firstName; }
    public void setFirstName(String firstName) { this.firstName = firstName; }
    public String getLastName() { return lastName; }
    public void setLastName(String lastName) { this.lastName = lastName; }
    public int getAge() { return age; }
    public void setAge(int age) { this.age = Math.max(age, 0); }
}
// child class
/* class AccountNonMandatory extends AccountMandatory {
    private String city;
    private String placeOfWork;
    private String familyStatus;
    private int ID;

    public void setLogin(String login) { this.setLogin(login); }
    public void setPassword(String password) { this.setPassword(password); }
    public void setFirstName(String firstName) { this.setFirstName(firstName); }
    public void setLastName(String lastName) { this.setLastName(lastName); }
    public void setAge(int age) { this.setAge(Math.max(age, 0)); }

    /* public AccountNonMandatory(String city, String placeOfWork, String familyStatus, int ID){
        super();
        this.city = city;
        this.placeOfWork = placeOfWork;
        this.familyStatus = familyStatus;
        this.ID = ID;
    }



    public String getCity() { return city; }
    public void setCity(String city) { this.city = city; }
    public String getPlaceOfWork() { return placeOfWork; }
    public void setPlaceOfWork(String placeOfWork) { this.placeOfWork = placeOfWork; }
    public String getFamilyStatus() { return familyStatus; }
    public void setFamilyStatus(String familyStatus) { this.familyStatus = familyStatus; }
    public int getID() { return ID; }
    public void setID(int ID) { this.ID = (int) (Math.random() * Long.MAX_VALUE / 2); }
}

// In new Class, create three users
//For user1 - change firstname
//For user2 - change City
//For user3 - change both login and password
//Printout fields before and after the change of each user
public class AccountDisplay {
    public static void main(String[] args) {
       // AccountNonMandatory user1 = new AccountNonMandatory();
       // AccountNonMandatory user2 = new AccountNonMandatory();
       // AccountNonMandatory user3 = new AccountNonMandatory();
    }
}

     */

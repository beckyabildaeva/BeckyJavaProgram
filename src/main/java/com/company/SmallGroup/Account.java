package com.company.SmallGroup;
/*
Task is:
Using OOP, create a Class Account, which has fields Login*, Password*, Firstname*, Lastname*, Age*, City, Place of work, Family status, ID.
Fields marked with star * are mandatory
Create several constructors (for all mandatory and each non-mandatory fields)
ID has to be generated by program and assigned to each new account
Implement Encapsulation with restrictions (like age cannot be negative number and etc)
In new Class, create three users
For user1 - change firstname
For user2 - change City
For user3 - change both login and password
Printout fields before and after the change of each user
 */


public class Account {
    // Using OOP, create a Class Account, which has fields Login*, Password*,
    // Firstname*, Lastname*, Age*, City, Place of work, Family status, ID.
    // Fields marked with star * are mandatory
    // Implement Encapsulation with restrictions

    private String login;
    private String password;
    private String firstName;
    private String lastName;
    private String city;
    private String placeOfWork;
    private String familyStatus;
    private int age;
    private int ID;

    // Create several constructors (for all mandatory and each non-mandatory fields)
    // ID has to be generated by program and assigned to each new account

    public Account(String login, String password, String firstName, String lastName, int age) {
        this.login = login;
        this.password = password;
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
        System.out.println("Login: " + this.login + "\nPassword: " + this.password + "\nFirst Name: " + this.firstName + "\nLast Name: " + this.lastName + "\nAge: " + this.age);
        System.out.println();
    }

    public Account (String login, String password, String firstName, String lastName, int age, String city){
        this.login = login;
        this.password = password;
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
        this.city=city;
        this.ID = (int) (Math.random() * Long.MAX_VALUE / 2);
        System.out.println("Login: " + this.login + "\nPassword: " + this.password + "\nFirst Name: " + this.firstName + "\nLast Name: " + this.lastName + "\nAge: " + this.age + "\nID: " + this.ID + "\nCity: " + this.city + "\nID: " + this.ID);
        System.out.println();
        }
    public Account(String login, String password, String firstName, String lastName, int age, String city, String placeOfWork){
        this.login = login;
        this.password = password;
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
        this.city=city;
        this.placeOfWork = placeOfWork;
        this.ID = (int) (Math.random() * Long.MAX_VALUE / 2);
        System.out.println("Login: " + this.login + "\nPassword: " + this.password + "\nFirst Name: " + this.firstName + "\nLast Name: " + this.lastName + "\nAge: " + this.age + "\nID: " + this.ID + "\nCity: " + this.city + "\nPlace Of Work: " + this.placeOfWork + "\nID: " + this.ID);
        System.out.println();
    }
    public Account(String login, String password, String firstName, String lastName, int age, String city, String placeOfWork, String familyStatus){
        this.login = login;
        this.password = password;
        this.firstName = firstName;
        this.lastName = lastName;
        this.age = age;
        this.city=city;
        this.placeOfWork = placeOfWork;
        this.familyStatus = familyStatus;
        this.ID = (int) (Math.random() * Long.MAX_VALUE / 2);
        System.out.println("Login: " + this.login + "\nPassword: " + this.password + "\nFirst Name: " + this.firstName + "\nLast Name: " + this.lastName + "\nAge: " + this.age + "\nCity: " + this.city + "\nPlace Of Work: " + this.placeOfWork + "\nFamily Status: " + this.familyStatus + "\nID: " + this.ID);
        System.out.println();
    }

    // Implement Encapsulation with restrictions
    public String getLogin(){ return login; }
    public String getPassword(){ return password; }
    public String getFirstName(){ return firstName; }
    public String getLastName(){ return lastName; }
    public int getAge(){ return age; }
    public String getCity(){ return city; }
    public String getPlaceOfWork(){ return placeOfWork; }
    public String getFamilyStatus(){ return familyStatus; }

    // Implement Encapsulation with restrictions (like age cannot be negative number and etc)
    public void setLogin(String login){ this.login = login; }
    public void setPassword(String password){ this.password = password; }
    public void setFirstName(String firstName){ this.firstName = firstName; }
    public void setLastName(String lastName){ this.lastName = lastName; }
    public void setAge(int age){
        if(age < 0){ this.age = 0; }
        else { this.age = age; }
        System.out.println(this.age); }
    public void setCity(String city){ this.city = city; }
    public void setPlaceOfWork(String placeOfWork){ this.placeOfWork = placeOfWork; }
    public void setFamilyStatus(String familyStatus){ this.familyStatus = familyStatus; }


}
/*
         In new Class, create three users
        For user1 - change firstname
        For user2 - change City
        For user3 - change both login and password
        Printout fields before and after the change of each user
         */
class DisplayAccountInfo {
    public static void main(String[] args) {
        Account user1 = new Account("abc", "123", "John", "Depp", 25);
        Account user2 = new Account("abcd", "1234", "Sophia", "Zavala", 30, "New York");
        Account user3 = new Account("abcde", "12345", "Brad", "Pitt", 35, "Ontario", "Microsoft");
        Account user4 = new Account("abcdef", "12346", "Angelina", "Jolie", 23, "Moscow", "Amazon", "Separated");
    }
}
